// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
const go = {
  "service": {
    "OrderService": {
      /**
       * CreateOrder
       * @param {Order} arg1 - Go Type: service.Order
       * @returns {Promise<Order>}  - Go Type: service.Order
       */
      "CreateOrder": (arg1) => {
        return window.go.service.OrderService.CreateOrder(arg1);
      },
      /**
       * GetNextOrderIdentifier
       * @returns {Promise<number>}  - Go Type: int32
       */
      "GetNextOrderIdentifier": () => {
        return window.go.service.OrderService.GetNextOrderIdentifier();
      },
      /**
       * GetOrderByClientName
       * @param {string} arg1 - Go Type: string
       * @param {number} arg2 - Go Type: int32
       * @param {number} arg3 - Go Type: int32
       * @returns {Promise<Array<Order>>}  - Go Type: []service.Order
       */
      "GetOrderByClientName": (arg1, arg2, arg3) => {
        return window.go.service.OrderService.GetOrderByClientName(arg1, arg2, arg3);
      },
      /**
       * GetOrderByIdentifier
       * @param {string} arg1 - Go Type: string
       * @param {number} arg2 - Go Type: int32
       * @param {number} arg3 - Go Type: int32
       * @returns {Promise<Array<Order>>}  - Go Type: []service.Order
       */
      "GetOrderByIdentifier": (arg1, arg2, arg3) => {
        return window.go.service.OrderService.GetOrderByIdentifier(arg1, arg2, arg3);
      },
      /**
       * GetOrdersList
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @returns {Promise<Array<Order>>}  - Go Type: []service.Order
       */
      "GetOrdersList": (arg1, arg2) => {
        return window.go.service.OrderService.GetOrdersList(arg1, arg2);
      },
    },
    "PriceService": {
      /**
       * CreatePrice
       * @param {Price} arg1 - Go Type: service.Price
       * @returns {Promise<Price>}  - Go Type: service.Price
       */
      "CreatePrice": (arg1) => {
        return window.go.service.PriceService.CreatePrice(arg1);
      },
      /**
       * DeletePrice
       * @param {UUID} arg1 - Go Type: uuid.UUID
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "DeletePrice": (arg1) => {
        return window.go.service.PriceService.DeletePrice(arg1);
      },
      /**
       * GetPricesByCategory
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @param {string} arg3 - Go Type: string
       * @returns {Promise<Array<Price>>}  - Go Type: []service.Price
       */
      "GetPricesByCategory": (arg1, arg2, arg3) => {
        return window.go.service.PriceService.GetPricesByCategory(arg1, arg2, arg3);
      },
      /**
       * GetPricesList
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @returns {Promise<Array<Price>>}  - Go Type: []service.Price
       */
      "GetPricesList": (arg1, arg2) => {
        return window.go.service.PriceService.GetPricesList(arg1, arg2);
      },
      /**
       * UpdatePrice
       * @param {Price} arg1 - Go Type: service.Price
       * @returns {Promise<Price>}  - Go Type: service.Price
       */
      "UpdatePrice": (arg1) => {
        return window.go.service.PriceService.UpdatePrice(arg1);
      },
    },
  },

};
export default go;
