// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
window.wailsbindings = {"service":{"ClientService":{"CreateClient":{"name":"service.ClientService.CreateClient","inputs":[{"type":"service.Client"}],"outputs":[{"type":"service.Client"}]},"GetClients":{"name":"service.ClientService.GetClients","outputs":[{"type":"[]service.Client"}]},"GetClientsByIdentification":{"name":"service.ClientService.GetClientsByIdentification","inputs":[{"type":"int32"},{"type":"int32"},{"type":"string"}],"outputs":[{"type":"[]service.Client"}]},"GetClientsByName":{"name":"service.ClientService.GetClientsByName","inputs":[{"type":"int32"},{"type":"int32"},{"type":"string"}],"outputs":[{"type":"[]service.Client"}]},"GetClientsList":{"name":"service.ClientService.GetClientsList","inputs":[{"type":"int32"},{"type":"int32"}],"outputs":[{"type":"[]service.Client"}]},"UpdateClient":{"name":"service.ClientService.UpdateClient","inputs":[{"type":"service.Client"}],"outputs":[{"type":"service.Client"}]}},"OrderService":{"CreateOrder":{"name":"service.OrderService.CreateOrder","inputs":[{"type":"service.Order"},{"type":"bool"}],"outputs":[{"type":"service.Order"}]},"GetNextOrderIdentifier":{"name":"service.OrderService.GetNextOrderIdentifier","outputs":[{"type":"int32"}]},"GetOrderByClientName":{"name":"service.OrderService.GetOrderByClientName","inputs":[{"type":"string"},{"type":"int32"},{"type":"int32"}],"outputs":[{"type":"[]service.Order"}]},"GetOrderByIdentifier":{"name":"service.OrderService.GetOrderByIdentifier","inputs":[{"type":"string"},{"type":"int32"},{"type":"int32"}],"outputs":[{"type":"[]service.Order"}]},"GetOrdersList":{"name":"service.OrderService.GetOrdersList","inputs":[{"type":"int32"},{"type":"int32"}],"outputs":[{"type":"[]service.Order"}]},"ListOrdersByRange":{"name":"service.OrderService.ListOrdersByRange","inputs":[{"type":"string"},{"type":"string"},{"type":"int32"},{"type":"int32"},{"type":"string"}],"outputs":[{"type":"service.OrderPagination"}]},"SetOrderDateAt":{"name":"service.OrderService.SetOrderDateAt","inputs":[{"type":"uuid.UUID"},{"type":"string"},{"type":"string"}],"outputs":[{"type":"service.Order"}]}},"PriceService":{"CreatePrice":{"name":"service.PriceService.CreatePrice","inputs":[{"type":"service.Price"}],"outputs":[{"type":"service.Price"}]},"DeletePrice":{"name":"service.PriceService.DeletePrice","inputs":[{"type":"uuid.UUID"}],"outputs":[{"type":"bool"}]},"GetPrices":{"name":"service.PriceService.GetPrices","outputs":[{"type":"[]service.Price"}]},"GetPricesByCategory":{"name":"service.PriceService.GetPricesByCategory","inputs":[{"type":"int32"},{"type":"int32"},{"type":"string"}],"outputs":[{"type":"[]service.Price"}]},"GetPricesList":{"name":"service.PriceService.GetPricesList","inputs":[{"type":"int32"},{"type":"int32"}],"outputs":[{"type":"[]service.Price"}]},"UpdatePrice":{"name":"service.PriceService.UpdatePrice","inputs":[{"type":"service.Price"}],"outputs":[{"type":"service.Price"}]}}}};
const go = {
  "service": {
    "ClientService": {
      /**
       * CreateClient
       * @param {Client} arg1 - Go Type: service.Client
       * @returns {Promise<Client>}  - Go Type: service.Client
       */
      "CreateClient": (arg1) => {
        return window.go.service.ClientService.CreateClient(arg1);
      },
      /**
       * GetClients
       * @returns {Promise<Array<Client>>}  - Go Type: []service.Client
       */
      "GetClients": () => {
        return window.go.service.ClientService.GetClients();
      },
      /**
       * GetClientsByIdentification
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @param {string} arg3 - Go Type: string
       * @returns {Promise<Array<Client>>}  - Go Type: []service.Client
       */
      "GetClientsByIdentification": (arg1, arg2, arg3) => {
        return window.go.service.ClientService.GetClientsByIdentification(arg1, arg2, arg3);
      },
      /**
       * GetClientsByName
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @param {string} arg3 - Go Type: string
       * @returns {Promise<Array<Client>>}  - Go Type: []service.Client
       */
      "GetClientsByName": (arg1, arg2, arg3) => {
        return window.go.service.ClientService.GetClientsByName(arg1, arg2, arg3);
      },
      /**
       * GetClientsList
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @returns {Promise<Array<Client>>}  - Go Type: []service.Client
       */
      "GetClientsList": (arg1, arg2) => {
        return window.go.service.ClientService.GetClientsList(arg1, arg2);
      },
      /**
       * UpdateClient
       * @param {Client} arg1 - Go Type: service.Client
       * @returns {Promise<Client>}  - Go Type: service.Client
       */
      "UpdateClient": (arg1) => {
        return window.go.service.ClientService.UpdateClient(arg1);
      },
    },
    "OrderService": {
      /**
       * CreateOrder
       * @param {Order} arg1 - Go Type: service.Order
       * @param {boolean} arg2 - Go Type: bool
       * @returns {Promise<Order>}  - Go Type: service.Order
       */
      "CreateOrder": (arg1, arg2) => {
        return window.go.service.OrderService.CreateOrder(arg1, arg2);
      },
      /**
       * GetNextOrderIdentifier
       * @returns {Promise<number>}  - Go Type: int32
       */
      "GetNextOrderIdentifier": () => {
        return window.go.service.OrderService.GetNextOrderIdentifier();
      },
      /**
       * GetOrderByClientName
       * @param {string} arg1 - Go Type: string
       * @param {number} arg2 - Go Type: int32
       * @param {number} arg3 - Go Type: int32
       * @returns {Promise<Array<Order>>}  - Go Type: []service.Order
       */
      "GetOrderByClientName": (arg1, arg2, arg3) => {
        return window.go.service.OrderService.GetOrderByClientName(arg1, arg2, arg3);
      },
      /**
       * GetOrderByIdentifier
       * @param {string} arg1 - Go Type: string
       * @param {number} arg2 - Go Type: int32
       * @param {number} arg3 - Go Type: int32
       * @returns {Promise<Array<Order>>}  - Go Type: []service.Order
       */
      "GetOrderByIdentifier": (arg1, arg2, arg3) => {
        return window.go.service.OrderService.GetOrderByIdentifier(arg1, arg2, arg3);
      },
      /**
       * GetOrdersList
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @returns {Promise<Array<Order>>}  - Go Type: []service.Order
       */
      "GetOrdersList": (arg1, arg2) => {
        return window.go.service.OrderService.GetOrdersList(arg1, arg2);
      },
      /**
       * ListOrdersByRange
       * @param {string} arg1 - Go Type: string
       * @param {string} arg2 - Go Type: string
       * @param {number} arg3 - Go Type: int32
       * @param {number} arg4 - Go Type: int32
       * @param {string} arg5 - Go Type: string
       * @returns {Promise<OrderPagination>}  - Go Type: service.OrderPagination
       */
      "ListOrdersByRange": (arg1, arg2, arg3, arg4, arg5) => {
        return window.go.service.OrderService.ListOrdersByRange(arg1, arg2, arg3, arg4, arg5);
      },
      /**
       * SetOrderDateAt
       * @param {UUID} arg1 - Go Type: uuid.UUID
       * @param {string} arg2 - Go Type: string
       * @param {string} arg3 - Go Type: string
       * @returns {Promise<Order>}  - Go Type: service.Order
       */
      "SetOrderDateAt": (arg1, arg2, arg3) => {
        return window.go.service.OrderService.SetOrderDateAt(arg1, arg2, arg3);
      },
    },
    "PriceService": {
      /**
       * CreatePrice
       * @param {Price} arg1 - Go Type: service.Price
       * @returns {Promise<Price>}  - Go Type: service.Price
       */
      "CreatePrice": (arg1) => {
        return window.go.service.PriceService.CreatePrice(arg1);
      },
      /**
       * DeletePrice
       * @param {UUID} arg1 - Go Type: uuid.UUID
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "DeletePrice": (arg1) => {
        return window.go.service.PriceService.DeletePrice(arg1);
      },
      /**
       * GetPrices
       * @returns {Promise<Array<Price>>}  - Go Type: []service.Price
       */
      "GetPrices": () => {
        return window.go.service.PriceService.GetPrices();
      },
      /**
       * GetPricesByCategory
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @param {string} arg3 - Go Type: string
       * @returns {Promise<Array<Price>>}  - Go Type: []service.Price
       */
      "GetPricesByCategory": (arg1, arg2, arg3) => {
        return window.go.service.PriceService.GetPricesByCategory(arg1, arg2, arg3);
      },
      /**
       * GetPricesList
       * @param {number} arg1 - Go Type: int32
       * @param {number} arg2 - Go Type: int32
       * @returns {Promise<Array<Price>>}  - Go Type: []service.Price
       */
      "GetPricesList": (arg1, arg2) => {
        return window.go.service.PriceService.GetPricesList(arg1, arg2);
      },
      /**
       * UpdatePrice
       * @param {Price} arg1 - Go Type: service.Price
       * @returns {Promise<Price>}  - Go Type: service.Price
       */
      "UpdatePrice": (arg1) => {
        return window.go.service.PriceService.UpdatePrice(arg1);
      },
    },
  },

};
export default go;
