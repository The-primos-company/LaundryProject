{"version":3,"sources":["wailsjs/go/models.ts","App.js","reportWebVitals.js","index.js"],"names":["Client","source","name","address","phone","JSON","parse","this","Order","identifier","receivedDate","deliveryDate","client","convertValues","a","classs","asMap","slice","map","elem","Object","keys","key","App","useState","orderIdentifier","setOrderIdentifier","orderReceivedDate","setOrderReceivedDate","orderDeliveryDate","setOrderDeliveryDate","clientName","setClientName","clientAddress","setClientAddress","clientPhone","setClientPhone","className","id","type","autoComplete","onChange","e","target","value","onClick","data","order","number","window","go","main","CreateOrder","then","console","log","createOrder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1a993a4.chunk.js","sourcesContent":["/* Do not change, this code is generated from Golang structs */\n\nexport {};\n\nexport class Client {\n    name: string;\n    address: string;\n    phone: string;\n\n    static createFrom(source: any = {}) {\n        return new Client(source);\n    }\n\n    constructor(source: any = {}) {\n        if ('string' === typeof source) source = JSON.parse(source);\n        this.name = source[\"name\"];\n        this.address = source[\"address\"];\n        this.phone = source[\"phone\"];\n    }\n}\nexport class Order {\n    identifier: string;\n    receivedDate: string;\n    deliveryDate: string;\n    client?: Client;\n\n    static createFrom(source: any = {}) {\n        return new Order(source);\n    }\n\n    constructor(source: any = {}) {\n        if ('string' === typeof source) source = JSON.parse(source);\n        this.identifier = source[\"identifier\"];\n        this.receivedDate = source[\"receivedDate\"];\n        this.deliveryDate = source[\"deliveryDate\"];\n        this.client = this.convertValues(source[\"client\"], Client);\n    }\n\n\tconvertValues(a: any, classs: any, asMap: boolean = false): any {\n\t    if (!a) {\n\t        return a;\n\t    }\n\t    if (a.slice) {\n\t        return (a as any[]).map(elem => this.convertValues(elem, classs));\n\t    } else if (\"object\" === typeof a) {\n\t        if (asMap) {\n\t            for (const key of Object.keys(a)) {\n\t                a[key] = new classs(a[key]);\n\t            }\n\t            return a;\n\t        }\n\t        return new classs(a);\n\t    }\n\t    return a;\n\t}\n}\n","import './App.css';\nimport React, { useState } from \"react\";\nimport { Order, Client } from \"./wailsjs/go/models\";\n\nfunction App() {\n  const [orderIdentifier, setOrderIdentifier] = useState([]);\n  const [orderReceivedDate, setOrderReceivedDate] = useState([]);\n  const [orderDeliveryDate, setOrderDeliveryDate] = useState([]);\n\n  const [clientName, setClientName] = useState([]);\n  const [clientAddress, setClientAddress] = useState([]);\n  const [clientPhone, setClientPhone] = useState([]);\n\n\n  const createOrder = (data) => {\n    const client = new Client({\n      name: clientName,\n      address: clientAddress,\n      phone: clientPhone,\n    });\n\n    const order = new Order({\n      number: orderIdentifier,\n      receivedDate: orderReceivedDate,\n      deliveryDate: orderDeliveryDate,\n      client,\n    })\n    window.go.main.App.CreateOrder(order).then(data => {\n      console.log(data);\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"logo\"></div>\n      <div className=\"input-box\" id=\"input\" data-wails-no-drag>\n        orden de servicio:\n        <input className=\"input\" id=\"orderIdentifier\" type=\"text\" autoComplete=\"off\" onChange={e => { setOrderIdentifier(e.target.value) }}></input>\n      </div>\n      <div className=\"input-box\" id=\"input\" data-wails-no-drag>\n        Cliente:\n        <input className=\"input\" id=\"clientName\" type=\"text\" autoComplete=\"off\" onChange={e => { setClientName(e.target.value) }}></input>\n      </div>\n      <div className=\"input-box\" id=\"input\" data-wails-no-drag>\n        Dirección:\n        <input className=\"input\" id=\"clientAddress\" type=\"text\" autoComplete=\"off\" onChange={e => { setClientAddress(e.target.value) }}></input>\n      </div>\n      <div className=\"input-box\" id=\"input\" data-wails-no-drag>\n        Teléfono:\n        <input className=\"input\" id=\"clientPhone\" type=\"text\" autoComplete=\"off\" onChange={e => { setClientPhone(e.target.value) }}></input>\n      </div>\n      <div className=\"input-box\" id=\"input\" data-wails-no-drag>\n        Fecha de recibido:\n        <input className=\"input\" id=\"orderReceivedDate\" type=\"text\" autoComplete=\"off\" onChange={e => { setOrderReceivedDate(e.target.value) }}></input>\n      </div>\n      <div className=\"input-box\" id=\"input\" data-wails-no-drag>\n        Fecha de entrega:\n        <input className=\"input\" id=\"orderDeliveryDate\" type=\"text\" autoComplete=\"off\" onChange={e => { setOrderDeliveryDate(e.target.value) }}></input>\n      </div>\n      <button className=\"btn\" onClick={() => createOrder()}>Crear Orden</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}